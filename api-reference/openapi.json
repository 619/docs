{
  "openapi": "3.0.1",
  "info": {
    "title": "Your Chain RPC API",
    "description": "API documentation for interacting with Your Chain blockchain, including account management, transactions, contracts, and stateful transactions.",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://sandbox.mintlify.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/rpc/getGasPrice": {
      "get": {
        "description": "Returns the current gas price or fee model.",
        "responses": {
          "200": {
            "description": "Gas price response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "gasPrice": {
                      "type": "number",
                      "description": "Current gas price in network units"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rpc/createAccount": {
      "post": {
        "description": "Generates a new wallet address with an optional private key.",
        "parameters": [
          {
            "name": "returnPrivateKey",
            "in": "query",
            "description": "Whether to include the private key in the response",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account creation response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "description": "Newly created wallet address"
                    },
                    "privateKey": {
                      "type": "string",
                      "description": "Private key (only if requested)",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rpc/getBalance": {
      "get": {
        "description": "Returns the balance of a given address.",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "required": true,
            "description": "The wallet address to query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Balance response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "balance": {
                      "type": "number",
                      "description": "Balance in network units"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rpc/sendTransaction": {
      "post": {
        "description": "Broadcasts a signed transaction to the network.",
        "requestBody": {
          "description": "Signed transaction details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transaction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction sent response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "txHash": {
                      "type": "string",
                      "description": "Transaction hash"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rpc/deployContract": {
      "post": {
        "description": "Deploys a smart contract on the blockchain.",
        "requestBody": {
          "description": "Contract deployment data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bytecode": {
                    "type": "string",
                    "description": "Smart contract bytecode"
                  },
                  "constructorParams": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Constructor parameters"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Contract deployed response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contractAddress": {
                      "type": "string",
                      "description": "The deployed contract address"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rpc/beginStatefulTransaction": {
      "post": {
        "description": "Starts a stateful transaction where intermediate states are off-chain.",
        "requestBody": {
          "description": "Stateful transaction initiation data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatefulTransaction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Stateful transaction initiated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sessionId": {
                      "type": "string",
                      "description": "Transaction session ID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Transaction": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "Sender address"
          },
          "to": {
            "type": "string",
            "description": "Recipient address"
          },
          "value": {
            "type": "number",
            "description": "Amount to send"
          },
          "nonce": {
            "type": "integer",
            "description": "Transaction nonce"
          },
          "signature": {
            "type": "string",
            "description": "Transaction signature"
          },
          "data": {
            "type": "string",
            "description": "Optional transaction data",
            "nullable": true
          }
        }
      },
      "StatefulTransaction": {
        "type": "object",
        "properties": {
          "participants": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of participating addresses"
          },
          "initialState": {
            "type": "object",
            "description": "Initial transaction state"
          },
          "maxDuration": {
            "type": "integer",
            "description": "Maximum duration in seconds"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
